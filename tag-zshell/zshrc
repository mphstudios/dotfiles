#!/usr/bin/env zsh
#
# Zsh interactive shell configuration
#
# This file is normally read ONLY by interactive, NON-login shells each time
# a new session is started or when a script is invoked using /usr/bin/env zsh
#
# Load order of configuration files:
# .zshenv → [.zprofile if login] → [.zshrc if interactive] → [.zlogin if login]
#
ZSH_DIR=~/.zsh

# make color constants available
autoload -U colors
colors

# add custom executable functions to front of path
# fpath=($ZSH_DIR/functions "${fpath[@]}" )
# and autoload each with alias expansion disabled
# autoload -Uz $fpath[1]/*(.:t)

# Z shell move command
autoload -U zmv


# -----------------------------------------------
# --------->>> DIRECTORY NAVIGATION <<<----------
# -----------------------------------------------

DIRSTACKSIZE=7

setopt auto_cd      # if command is unrecognized and is the name of a directory
setopt auto_pushd   # cd pushes old directory onto the directory stack
setopt cdable_vars  # attempt to expand any cd argument that is not a directory
setopt pushd_ignore_dups  # do not push dupelicates onto the directory stack
setopt pushd_minus        # exchange ‘+’ and ‘-’ for the directory stack
setopt pushd_to_home      # pushd with no arguments acts like ‘pushd $HOME’


# -----------------------------------------------
# -------------->>> COMPLETION <<<---------------
# -----------------------------------------------

setopt always_to_end    # move cursor to end of word on full completion
setopt auto_list        # automatically list choices on an ambiguous completion
setopt auto_menu        # show completion menu on successive tab press
setopt complete_aliases # make aliases distinct commands for completion purposes
setopt complete_in_word # completion from both start and end of a word
setopt glob_complete    # generate matches and cycle through like menu_complete
setopt hash_list_all    # avoid false reports of spelling errors
setopt list_ambiguous   # auto-list only when nothing would be inserted
setopt list_types       # show file types in completion list
setopt no_list_beep     # do not beep on an ambiguous completion

# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# pasting with tabs does not perform completion
zstyle ':completion:*' insert-tab pending

fpath=(/Users/mph/.docker/completions $fpath)
autoload -Uz compinit
compinit

# -----------------------------------------------
# ------------->>> EXPANSION <<<-----------------
# -----------------------------------------------
unsetopt no_match         # do not print an error when filename has no matches

setopt extended_glob      # treat ‘#~^’ as part of filename generation patterns
setopt glob_dots          # do not require leading ‘.’ for explicit file match
setopt glob_star_short    # pattern ‘**/*’ can be abbreviated as ‘**’, et cetera
setopt no_case_glob       # case-insensitive globbing
setopt numeric_glob_sort


# -----------------------------------------------
# -------------->>> HISTORY <<<------------------
# -----------------------------------------------

# set an exclude pattern to use when history files are written
# matching commands are still added to the interactive history
HISTORY_IGNORE="(cd|cd ..|cls|l[alsh]#( *)#|llg|open .|pwd|exit)"

HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000

setopt APPEND_HISTORY       # append to the history file rather than replace it
setopt BANG_HIST            # expand '!' character when writing to history
setopt EXTENDED_HISTORY     # <beginning time>:<elapsed seconds>;<command>
setopt HIST_EXPIRE_DUPS_FIRST # expire duplicates first when trimming history
setopt HIST_FCNTL_LOCK      # use system fcntl call to lock history files
setopt HIST_IGNORE_DUPS     # do not record consecutive duplicate entries
setopt HIST_IGNORE_ALL_DUPS # delete older entry if a new entry is a duplicate
setopt HIST_IGNORE_SPACE    # do not add commands that begin with <SPACE>
setopt HIST_NO_FUNCTIONS    # do not record function definitions
setopt HIST_NO_STORE        # do not reocrd the 'history' command
setopt HIST_REDUCE_BLANKS   # remove superfluous blanks before recording entry
setopt HIST_SAVE_NO_DUPS    # do not write duplicate entries to history files
unsetopt HIST_VERIFY        # exec command without reload into the editing buffer
setopt INC_APPEND_HISTORY   # incrementally write to history files
#setopt SHARE_HISTORY       # inc append history and share across sessions


# -----------------------------------------------
# ----------->>> INPUT/OUTPUT <<<----------------
# -----------------------------------------------

setopt aliases      # expand aliases
setopt correct      # auto-correction prompt for mistyped commands
setopt ignore_eof   # do not exit on end-of-file
setopt no_clobber   # do not override files using `>` (override using `>!`)
setopt path_dirs    # search path even on command names containing slashes


# -----------------------------------------------
# ------------>>> JOB CONTROL <<<----------------
# -----------------------------------------------

setopt long_list_jobs # print job notifications in long format by default
setopt no_hup         # do not send HUP signal to jobs when the shell exits
setopt no_bg_nice     # do not nice background tasks


# -----------------------------------------------
# --------------->>> PLUGINS <<<-----------------
# -----------------------------------------------

## Sheldon command-line tool to manage and load shell plugins
# set a shell specific configuration file and data directory for installed plugins
# see https://github.com/rossmacarthur/sheldon/issues/166
export SHELDON_CONFIG_FILE="${XDG_CONFIG_HOME:-$ZSH_DIR}/zsh-plugins.toml"
export SHELDON_DATA_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/sheldon/zsh"

# https://sheldon.cli.rs/Getting-started.html#loading-plugins
if (( $+commands[sheldon] )) then
  eval "$(sheldon source)"
fi

# Load configuration for zsh-autosuggestions plugin
[ -f $ZSH_DIR/autosuggestions.zsh ] && source $ZSH_DIR/autosuggestions.zsh

## Configure zsh-notify
#zstyle ':notify:*' error-title "Command Failed"
#zstyle ':notify:*' success-title "Command Completed"


# -----------------------------------------------
# -------->>> ADDITIONAL CONFIG FILES <<<--------
# -----------------------------------------------

[ -f $ZSH_DIR/bindings.zsh ] && source $ZSH_DIR/bindings.zsh

[ -f $ZSH_DIR/prompt.zsh ] && source $ZSH_DIR/prompt.zsh

[ -f $ZSH_DIR/aliases.zsh ] && source $ZSH_DIR/aliases.zsh

[ -f $ZSH_DIR/smartdots.zsh ] && source $ZSH_DIR/smartdots.zsh

## replace default cd command with zoxide
# https://github.com/ajeetdsouza/zoxide
if (( $+commands[zoxide] )) then
  eval "$(zoxide init zsh --cmd cd)"
fi

## mise-en-place dev tools, environment, and tasks manager
# https://mise.jdx.dev/about.html
if (( $+commands[mise] )) then
  eval "$(mise activate zsh)"
fi
