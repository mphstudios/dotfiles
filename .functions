#!/usr/bin/env bash

##
# work around xhr issues in Chrome when working locally
##
function chrome () { open $@ --args --allow-file-access-from-files; }

##
# handy extract program
##
function extract () {
  if [ -f $1 ] ; then
    case $1 in
        *.tar)      tar xvf $1   ;;
        *.tar.bz2)  tar xvjf $1  ;;
        *.tbz2)     tar xvjf $1  ;;
        *.tar.gz)   tar xvzf $1  ;;
        *.tgz)      tar xvzf $1  ;;
        *.rar)      unrar x $1   ;;
        *.bz2)      bunzip2 $1   ;;
        *.gz)       gunzip $1    ;;
        *.zip)      unzip $1     ;;
        *.Z)        uncompress $1;;
        *.7z)       7z x $1      ;;
        *)          echo "'$1' cannot be extracted via >extract<" ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

##
# Autogenerate .gitignore files,
# see http://www.gitignore.io for documentation
##
function gitignore () { curl http://www.gitignore.io/api/$@ ;}

##
# wrapper function to enhance dirs command
##
function pd()
{
    if [[ $# -ge 1 ]];
    then
        choice="$1"
    else
        dirs -v
        echo -n "⚡ " #U+26A1 HIGH VOLTAGE SIGN (⚡)
        read choice
    fi
    if [[ -n $choice ]];
    then
        declare -i cnum="$choice"
        if [[ $cnum != $choice ]];
        then #choice is not numeric
            choice=$(dirs -v | grep $choice | tail -1 | awk '{print $1}')
            cnum="$choice"
            if [[ -z $choice || $cnum != $choice ]];
            then
                echo "$choice not found"
                return
            fi
        fi
        choice="+$choice"
    fi
    pushd $choice
}

##
# Open man pages in Preview,
#   because sometimes it's nice to read them this way.
# Usage: `pman grep`
##
function pman () { man -t "${1}" | open -f -a /Applications/Preview.app; }

# syspip
#   invoke pip without an active virtual environment in
#   order to allow installation of system level packages
function syspip () { PIP_REQUIRE_VIRTUALENV="" pip "$@"; }

function syspip3 () { PIP_REQUIRE_VIRTUALENV="" pip3 "$@"; }

# load Teleport function
if [ -f ~/.tp_command ]; then
    source ~/.tp_command
    touch -a ~/.tp_aliases
    touch -a ~/.tp_history
fi

##
# If this computer does not have an implementation of tree,
# then make a simple implementation using find and sed.
##
if [ -z "\${which tree}" ]; then
	function tree { find $@ -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'; }
fi

##
# Select menu listing virtualenvs and allowing activation by number,
# requires the virtualenvwrapper script be loaded in the shell.
# Originally written by Peter Coles,
# http://mrcoles.com/menu-shortcut-activating-virtualenv/
##
function virtualenvmenu() {
    select env in `lsvirtualenv -b`; do
        if [ -n "$env" ]; then
            workon "$env"
        fi
        break
    done
}
