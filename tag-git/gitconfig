[alias]
    aliases = config --get-regexp alias

    branches = branch --all
    description = branch --edit-description

    remotes = remote --verbose

    assume = update-index --assume-unchanged
    presume = update-index --no-assume-unchanged

    skip = update-index --skip-worktree
    noskip = update-index --no-skip-worktree

    pop = stash pop --index
    save = stash save
    unapply = !git stash show -p | git apply -R

    # discard current changes to the working copy
    # and restore it to the last committed version
    discard = reset --hard HEAD

    # commit --amend for older commits
    fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"

    # undo the previous commit but preserve changes to the working copy
    uncommit = reset --soft HEAD~1

    log = log --graph --decorate --pretty=oneline --abbrev-commit
    tree = log --all --graph --decorate --oneline --simplify-by-decoration

    ls = ls-files
    ignored = ls-files . --ignored --exclude-standard --others
    untracked = ls-files . --exclude-standard --others

    wdiff = diff --color-words #GNU-like word diff

[apply]
    whitespace = fix #detect whitespace errors when applying a patch

[branch]
    # autosetupmerge = always
    # autosetuprebase = always
    description = true

[color]
    branch = auto
    diff = auto
    interactive = auto
    pager = true
    status = auto
    ui = auto

[core]
    attributesfile = ~/.gitattributes
    editor = "subl -n -w"
    excludesfile = ~/.gitignore
    quotepath = false

    # Use system ssh in order to have access to ids in Keychain
    sshCommand = "/usr/bin/ssh"

    # Safer `git rebase` on macOS
    # Auto-Save and Versions features can cause rebase to fail randomly
    # because of ctime differences between the index and the working tree
    # http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
    trustctime = false

    # treat spaces before tabs and trailing whitespace as an error
    whitespace = space-before-tab,trailing-space

[credential]
    helper = osxkeychain

[diff]
    tool = sublimerge
    guitool = Kaleidoscope

[diff "exif"]
    textconv = exiftool

[difftool]
    prompt = false
    trustExitCode = true

[difftool "bbdiff"]
    cmd = bbdiff-wrapper.sh \"$LOCAL\" \"$REMOTE\"

[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[difftool "kitty"]
    cmd = kitty +kitten diff \"$LOCAL\" \"$REMOTE\"

[difftool "opendiff"]
    cmd = opendiff-wrapper \"$LOCAL\" \"$REMOTE\"

[difftool "sublimerge"]
    cmd = subl -n --wait \"$REMOTE\" \"$LOCAL\" --command \"sublimerge_diff_views {\\\"left_read_only\\\": true, \\\"right_read_only\\\": true}\"

[difftool "vimdiff"]
    cmd = vimdiff \"$LOCAL\" \"$REMOTE\"

[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process

[help]
    autocorrect = 1

[include]
  path = .github

[log]
    pretty = oneline

[merge]
    # defaultToUpstream = true
    # ff = false    #do not fast forward commits when merging
    # log = true    #list merged commits in the autogenerated message
    tool = sublimerge

[merge "Bundler"]
    name = bundler
    driver = bundle

[merge "RailsSchema"]
    # See https://github.com/tpope/hookup for documentation
    name = Always resolve Rails schema conflicts using the newer version
    driver = hookup resolve-schema %A %O %B %L

[mergetool]
    keepBackup = false
    prompt = false

[mergetool "bbdiff"]
    cmd = "git-bbdiff -c $MERGED"
    keepBackup = false
    trustExitCode = false

[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustExitCode = true

[mergetool "opendiff"]
    trustExitCode = true

[mergetool "sourcetree"]
    cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
    trustExitCode = true

[mergetool "sublime"]
    # cmd = "subl -w \$MERGED"
    trustExitCode = false

[mergetool "sublimerge"]
    cmd = subl -n --wait \"$REMOTE\" \"$BASE\" \"$LOCAL\" \"$MERGED\" --command \"sublimerge_diff_views\"
    trustExitCode = false

[pull]
    # rebase = preserve  #preserve merge commits when rebasing

[push]
    default = simple

[rebase]
    # autosquash = true

[rerere]
    # Record how to resolve conflicts during a "test" merge and reuse the same
    # approach when resolving the same conflict later during a "real" merge
    enabled = true
    autoupdate = 1

[url "https://"]
    insteadOf = git://

[web]
    browser = safari
